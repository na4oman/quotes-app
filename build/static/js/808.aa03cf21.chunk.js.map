{"version":3,"file":"static/js/808.aa03cf21.chunk.js","mappings":"2KAAaA,EAAkB,SAAAC,GAC7B,IAAMC,EAAa,GAEnB,IAAK,IAAMC,KAAOF,EAAM,CACtB,IAAMG,GAAO,QACXC,GAAIF,GACDF,EAAKE,IAGVD,EAAWI,KAAKF,GAGlB,OAAOF,I,gGCXT,EAAuB,wB,SCkBvB,EAhBkB,SAAAK,GAChB,OACE,gBAAIC,UAAWC,EAAf,WACE,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAD,CAAMC,GAAIL,EAAMF,GAAIG,UAAU,MAA9B,8BCXN,EAAuB,wBAAvB,EAAyD,2BCoDzD,EArCkB,SAAAD,GAChB,IAXkBM,EAAQC,EAWpBC,GAAaC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MAGbC,EAAiD,QADjC,IAAIC,gBAAgBH,EAASI,QACZC,IAAI,QAEnCC,GAjBYV,EAiBcN,EAAMM,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOf,KAAOgB,EAAOhB,KAAO,GAAK,EAEjCe,EAAOf,KAAOgB,EAAOhB,KAAO,GAAK,MAqB5C,OACE,UAAC,EAAAiB,SAAD,YACE,gBAAKnB,UAAWC,EAAhB,UACE,oBAAQmB,QAVe,WAC3Bb,EAAW,CACTc,SAAUZ,EAASY,SACnBR,OAAO,SAAD,OAAWF,EAAqB,OAAS,UAO7C,kBACQA,EAAqB,aAAe,kBAG9C,eAAIX,UAAWC,EAAf,SACGc,EAAaO,KAAI,SAAAC,GAAK,OACrB,SAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVM,OAAQoB,EAAMpB,OACdD,KAAMqB,EAAMrB,MAHPqB,EAAM1B,a,kBCzCvB,EAA2B,gCCa3B,EAXsB,WACpB,OACE,iBAAKG,UAAWC,EAAhB,WACE,6CACA,SAAC,KAAD,CAAMG,GAAG,aAAaJ,UAAU,MAAhC,6B,SCyBN,EA1BkB,WAChB,OAA8CwB,EAAAA,EAAAA,MAAtC/B,EAAR,EAAQA,KAAMgC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,UAE1BC,GAAepC,EAAAA,EAAAA,GAAgBC,GAErC,OAAIiC,GAEA,gBAAK1B,UAAU,WAAf,UACE,SAAC6B,EAAA,EAAD,MAKFJ,GAAc,cAAGzB,UAAU,mBAAb,SAAiCyB,EAAMhC,QAErDkC,GAAeC,GAAwC,IAAxBA,EAAaE,QAK9C,8BACE,SAAC,EAAD,CAAWzB,OAAQuB,OALd,SAAC,EAAD","sources":["lib/api.js","webpack://react-router-quotes/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-router-quotes/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-router-quotes/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["export const transformedData = data => {\r\n  const loadedData = []\r\n\r\n  for (const key in data) {\r\n    const dataObj = {\r\n      id: key,\r\n      ...data[key],\r\n    }\r\n\r\n    loadedData.push(dataObj)\r\n  }\r\n\r\n  return loadedData\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__KIH9Y\"};","import { Link } from 'react-router-dom'\nimport classes from './QuoteItem.module.css'\n\nconst QuoteItem = props => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={props.id} className='btn'>\n        View Details\n      </Link>\n    </li>\n  )\n}\n\nexport default QuoteItem\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__r06Bo\",\"sorting\":\"QuoteList_sorting__YPO-n\"};","import { Fragment } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nimport QuoteItem from './QuoteItem'\nimport classes from './QuoteList.module.css'\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.text > quoteB.text ? 1 : -1\n    } else {\n      return quoteA.text < quoteB.text ? 1 : -1\n    }\n  })\n}\n\nconst QuoteList = props => {\n  const navigation = useNavigate()\n  const location = useLocation()\n\n  const queryParams = new URLSearchParams(location.search)\n  let isSortingAscending = queryParams.get('sort') === 'asc'\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n  const toggleSortingHandler = () => {\n    navigation({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n    })\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={toggleSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map(quote => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  )\n}\n\nexport default QuoteList\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__SibtO\"};","import { Link } from 'react-router-dom'\nimport classes from './NoQuotesFound.module.css'\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to='/new-quote' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  )\n}\n\nexport default NoQuotesFound\n","import QuoteList from '../components/quotes/QuoteList'\r\nimport { useGetQuotesQuery } from '../services/http'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport NoQuotesFound from '../components/quotes//NoQuotesFound'\r\nimport { transformedData } from '../lib/api'\r\n\r\nconst AllQuotes = () => {\r\n  const { data, error, isLoading, isSuccess } = useGetQuotesQuery()\r\n\r\n  const loadedQuotes = transformedData(data)\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) return <p className='centered focused'>{error.data}</p>\r\n\r\n  if (isSuccess && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <QuoteList quotes={loadedQuotes} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AllQuotes\r\n"],"names":["transformedData","data","loadedData","key","dataObj","id","push","props","className","classes","text","author","to","quotes","ascending","navigation","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","pathname","map","quote","useGetQuotesQuery","error","isLoading","isSuccess","loadedQuotes","LoadingSpinner","length"],"sourceRoot":""}